#!/usr/bin/env bash

#####################################################################################################################################
##
##  GitHub Script: https://github.com/slyfox1186/script-repo/blob/main/Bash/Installer%20Scripts/GNU%20Software/build-all-gnu-safer
##
##  Purpose: Loops multiple build scripts to optimize efficiency. This is the safer of the two scripts.
##
##  Updated: 11.26.23
##
##  Script version: 1.1
##
#####################################################################################################################################

clear

if [ "${EUID}" -eq '0' ]; then
    printf "%s\n\n" 'You must run this script WITHOUT root/sudo.'
    exit 1
fi

#
# PRINT THE SCRIPT BANNER
#

printf "%s\n%s\n\n"                                      \
    "Build All GNU Safer Script - version ${script_ver}" \
    '===================================================='
sleep 2

script_ver=1.1
cwd="$PWD"/build-all-gnu-safer-script
web_repo=https://github.com/slyfox1186/script-repo
user_agent='Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/121.0.0.0 Safari/537.36'

if [ -d "$cwd" ]; then
    sudo rm -fr "$cwd"
fi
mkdir -p "$cwd"/completed

exit_fn()
{
    printf "\n%s\n\n%s\n\n"                                       \
        'Make sure to star this repository to show your support!' \
        "$web_repo"
    exit 0
}

fail_fn()
{
    printf "\n%s\n\n%s\n\n" \
        "$1"              \
        "To report a bug create an issue at: $web_repo/issues"
    exit 1
}

pkgs=(asciidoc autogen autoconf autoconf-archive automake binutils bison
      build-essential bzip2 ccache cmake curl libc6-dev libintl-perl
      libpth-dev libtool libtool-bin lzip lzma-dev m4 meson nasm ninja-build
      texinfo xmlto yasm wget zlib1g-dev)

for pkg in ${pkgs[@]}
do
    missing_pkg="$(sudo dpkg -l | grep -o "${pkg}")"

    if [ -z "${missing_pkg}" ]; then
        missing_pkgs+=" ${pkg}"
    fi
done

if [ -n "${missing_pkgs}" ]; then
    sudo apt -y install ${missing_pkgs}
    sudo apt -y autoremove
    clear
fi

#
# ADD ADDITIONAL SEARCH PATHS TO THE LD LIBRARY LINKER
#

sudo bash -c 'bash <(curl -sSL https://ld-linker.optimizethis.net)'

#
# DETECT THE PC ARCHITECTURE
#

case "$(uname -m)" in
      x86_64)                        arch_ver=pkg-config;;
      aarch64*|armv8*|arm|armv7*)    arch_ver=pkg-config-arm;;
      *)                             fail_fn "Unrecognized architecture: '$(uname -m)'";;
esac

cd "$cwd" || exit 1

scripts=(${arch_ver} m4 autoconf-2.71 autoconf-archive libtool bash make sed tar gawk grep nano wget)
cnt=0

for script in ${scripts[@]}
do
    let cnt=cnt+1
    wget --show-progress -U "$user_agent" -cq "https://raw.githubusercontent.com/slyfox1186/script-repo/main/Bash/Installer%20Scripts/GNU%20Software/build-${script}"
    mv "build-${script}" "$cnt-build-${script}.sh" 2>/dev/null
done

clear

for f in $(find ./ -maxdepth 1 -type f | sort -V | sed 's/\.\///g')
do
    if echo '1' | bash "${f}"; then
        mv "${f}" "$cwd"/completed
    else
        if [ ! -d "$cwd"/failed ]; then
            mkdir -p "$cwd"/failed
        fi
        mv "${f}" "$cwd"/failed
    fi
done

if [ -d "$cwd"/failed ]; then
    printf "%s\n\n%s\n\n"                                  \
        'One of the scripts failed to build successfully.' \
        "You can find the failed script at: $cwd/failed"
    exit_fn
fi

# CLEANUP LEFTOVER FILES
sudo rm -fr "$cwd"

# DISPLAY EXIT MESSAGE
exit_fn
