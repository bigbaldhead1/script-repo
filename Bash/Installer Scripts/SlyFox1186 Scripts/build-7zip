#!/usr/bin/env bash

################################################################################
##
##  GitHub: https://github.com/slyfox1186/script-repo
##
##  Purpose: Install the latest 7-zip package across multiple OS types.
##          The user will be prompted to select their OS architecture before
##          installing.
##
##  Updated: 09.04.23
##
##  Script version: 1.3
##
################################################################################

clear

#
# SET VARIABLES
#

script_ver=1.3
version=7z2301
tar_file="${version}.tar.xz"
cwd="${PWD}"/7zip-build-script
output_dir="${cwd}/${version}"
install_dir=/usr/local/bin
user_agent='Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/115.0.0.0 Safari/537.36'
web_repo=https://github.com/slyfox1186/script-repo

#
# CREATE OUTPUT FOLDERS
#

if [ ! -d "${cwd}" ]; then
    mkdir -p "${cwd}"
fi

#
# CREATE FUNCTIONS
#

exit_fn()
{
    printf "%s\n%s\n\n" \
        'Make sure to star this repository to show your support!' \
        "${web_repo}"
        exit 0
}

fail_fn()
{
    printf "\n\n%s\n\n%s\n\n%s\n\n" \
        "${1}" \
        'Please create a support ticket at:' \
        "${web_repo}/issues"
    exit 1
}

# PRINT 7-ZIP VERSION
version_fn()
{
    show_ver="$("${install_dir}/7z" | head -n 2 | cut -d " " -f3 | awk 'NF' | xargs -I{} echo "7-Zip has been updated to version {}")"
    printf "\n%s\n\n" "${show_ver}"
}

#
# PRINT SCRIPT BANNER
#

box_out_banner()
{
    input_char=$(echo "${@}" | wc -c)
    line=$(for i in $(seq 0 ${input_char}); do printf "-"; done)
    tput bold
    line="$(tput setaf 3)${line}"
    space=${line//-/ }
    echo " ${line}"
    printf '|' ; echo -n "${space}" ; printf "%s\n" '|';
    printf '| ' ;tput setaf 4; echo -n "${@}"; tput setaf 3 ; printf "%s\n" ' |';
    printf '|' ; echo -n "${space}" ; printf "%s\n" '|';
    echo " ${line}"
    tput sgr 0
}
box_out_banner "7-Zip Build Script: v${script_ver}"

# DETECT PC ARCHITECTURE
case "$(uname -m)" in
      x86_64)          url=linux-x64.tar.xz;;
      i386|i686)       url=linux-x86.tar.xz;;
      aarch64*|armv8*) url=linux-arm64.tar.xz;;
      arm|armv7*)      url=linux-arm.tar.xz;;
      *)               fail_fn "Unrecognized architecture '$(uname -m)'";;
esac

# Install curl (needed to download the files)
if ! sudo dpkg -l | grep -o curl &>/dev/null; then
    sudo apt -y install curl
    sudo apt -y autoremove
    clear
fi

# Download the tar file if missing
if [ ! -f "${tar_file}" ]; then
   curl -A "${user_agent}" -Lso "${cwd}/${tar_file}" "https://www.7-zip.org/a/${version}-${url}"
fi

# Extract files into directory '7z'
mkdir -p "${output_dir}"
if [ -f "${cwd}/${tar_file}" ]; then
    if ! tar -xf "${cwd}/${tar_file}" -C "${output_dir}"; then
        fail_fn "The script was unable to extract the archive: '${cwd}/${tar_file}'"
    fi
else
    fail_fn "The script was unable to find the download file '${cwd}/${tar_file}'"
fi

# Copy the file to its destination or throw an error if the copying of the file fails
if ! sudo cp -f "${cwd}/${version}/7zzs" "${install_dir}/7z"; then
    fail_fn "The script was unable to copy the static file '7zzs' to '${install_dir}/7z'"
fi

# SHOW THE NEWLY INSTALLED 7-ZIP VERSION
version_fn

# CLEAN UP THE INSTALL FILES
sudo rm -fr "${cwd}"

# SHOW THE EXIT MESSAGE
exit_fn
