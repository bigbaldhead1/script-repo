#!/usr/bin/env bash

################################################################################################################################
##
##  GitHub Script: https://github.com/slyfox1186/script-repo/blob/main/Bash/Installer%20Scripts/GitHub%20Projects/build-all-git-safer
##
##  Purpose: Loops multiple build scripts and installs them.
##
##  Disclaimer: This is the safer of the two scripts offered on this repo. This means that this script is less likely to have
##              bugs of various severity. It DOES NOT mean that this script is 100% guaranteed safe. New code is always coming
##              out and problems can unfortunately happen unexpectedly.
##
##  Updated: 11.24.23
##
##  Script version: 1.1
##
################################################################################################################################

clear

if [ "${EUID}" -eq '0' ]; then
    printf "%s\n\n" 'You must run this script WITHOUT root/sudo.'
    exit 1
fi

script_ver=1.1
cwd="${PWD}"/build-all-git-safer-script
web_repo=https://github.com/slyfox1186/script-repo
user_agent='Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/120.0.0.0 Safari/537.36'

if [ -d "${cwd}" ]; then
    sudo rm -fr "${cwd}"
fi
mkdir -p "${cwd}"/completed

cd "${cwd}" || exit 1

#
# PRINT THE SCRIPT BANNER
#

printf "%s\n%s\n\n"                                      \
    "Build All Git Safer Script - version ${script_ver}" \
    '===================================================='
sleep 2

exit_fn()
{
    printf "\n%s\n\n%s\n\n"                                       \
        'Make sure to star this repository to show your support!' \
        "${web_repo}"
    exit 0
}

fail_fn()
{
    printf "\n%s\n\n%s\n\n" \
        "${1}"              \
        "To report a bug create an issue at: ${web_repo}/issues"
    exit 1
}

pkgs=(asciidoc autoconf autoconf-archive autogen automake binutils bison
      build-essential bzip2 ccache cmake curl libtool libtool-bin lzip m4
      meson nasm ninja-build yasm wget zlib1g-dev)

for pkg in ${pkgs[@]}
do
    missing_pkg="$(sudo dpkg -l | grep -o "${pkg}")"

    if [ -z "${missing_pkg}" ]; then
        missing_pkgs+=" ${pkg}"
    fi
done

if [ -n "${missing_pkgs}" ]; then
    sudo apt -y install ${missing_pkgs}
    sudo apt -y autoremove
    clear
fi

scripts=(openssl-lite tools aria2 zlib zstd git python3 adobe-fonts)
cnt=0

for script in ${scripts[@]}
do
    let cnt=cnt+1
    wget -U "${user_agent}" --show-progress -cq "https://raw.githubusercontent.com/slyfox1186/script-repo/main/Bash/Installer%20Scripts/GitHub%20Projects/build-${script}"
    mv "build-${script}" "0${cnt}-build-${script}"'.sh' 2>/dev/null
done

clear

for file in $(ls -v)
do
    if echo '1' | bash "${file}"; then
        mv "${file}" 'completed'
    else
        if [ ! -d "${cwd}"/failed ]; then
            mkdir -p "${cwd}"/failed
        fi
        mv "${file}" 'failed'
    fi
done

# CLEANUP LEFTOVER FILES
if [ -d "${cwd}"/failed ]; then
    sudo rm -fr "${cwd}"/completed
    clear
    printf "%s\n\n" 'A script failed to install. You can find the script that failed inside the "failed" folder.'
    read -p 'Press enter to continue.'
    clear
else
    sudo rm -fr "${cwd}"
fi

# DISPLAY EXIT MESSAGE
exit_fn
